// Generated by LiveScript 1.2.0
var io, socks, rooms;
io = require('socket.io').listen(9980);
socks = {};
rooms = {};
io.sockets.on('connection', function(socket){
  socket.on('leave', function(data){
    socket.broadcast.emit('leave', data);
  });
  socket.on('sdp', function(data){
    socket.broadcast.emit('sdp', data);
  });
  socket.on('ice', function(data){
    socket.broadcast.emit('ice', data);
  });
  socket.on('new', function(data){
    socket.broadcast.emit('new', data);
  });
  socket.on('joinUsr', function(data, callback){
    if (data.to != null && socks[data.to] != null) {
      socks[data.to].emit('join', data.userid);
    }
  });
  socket.on('join', function(data, callback){
    if (data.userid && socks[data.userid] == null) {
      socks[data.userid] = socket;
    }
    if (!data.roomid) {
      return;
    }
    if (data.roomid in rooms) {
      rooms[data.roomid].host.socket.emit('join', data.userid);
      if (typeof callback === 'function') {
        callback(true);
      }
    } else {
      rooms[data.roomid] = {
        host: {
          userid: data.userid,
          socket: socket
        }
      };
      if (typeof callback === 'function') {
        callback(false);
      }
    }
  });
  socket.on('part', function(data){
    socket.broadcast.emit('part', data);
  });
  socket.on('disconnect', function(){});
});